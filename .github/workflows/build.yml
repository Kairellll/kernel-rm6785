name: Kernel Build

on: workflow_dispatch:

jobs: build: runs-on: ubuntu-latest name: Build Kernel using custom_defconfig

steps:
- name: Checkout source
  uses: actions/checkout@v4

- name: Set up environment
  run: |
    sudo apt-get update
    sudo apt-get install -y bc bison build-essential cpio curl flex git kmod libssl-dev libncurses5-dev libelf-dev python3 unzip zip

- name: Clone toolchain (Proton Clang)
  run: |
    git clone --depth=1 https://github.com/kdrag0n/proton-clang.git clang

- name: Set environment variables
  run: |
    echo "PATH=$PWD/clang/bin:$PATH" >> $GITHUB_ENV
    echo "ARCH=arm64" >> $GITHUB_ENV
    echo "SUBARCH=arm64" >> $GITHUB_ENV
    echo "KBUILD_BUILD_USER=github" >> $GITHUB_ENV
    echo "KBUILD_BUILD_HOST=actions" >> $GITHUB_ENV

- name: Use custom_defconfig
  run: |
    mkdir -p out
    cp arch/arm64/configs/custom_defconfig out/.config
    make O=out olddefconfig

- name: Build kernel
  run: |
    make -j$(nproc) O=out \
      ARCH=arm64 \
      CC=clang \
      CROSS_COMPILE=aarch64-linux-gnu- \
      CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
      HOSTCC=gcc \
      HOSTCXX=g++ \
      LD=ld.lld

- name: Clone AnyKernel3
  run: |
    git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git
    cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/

- name: Create flashable ZIP
  run: |
    cd AnyKernel3
    zip -r9 ../kernel.zip *

- name: Upload kernel zip
  uses: actions/upload-artifact@v4
  with:
    name: kernel-flashable
    path: kernel.zip

