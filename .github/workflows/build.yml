name: Kernel Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Kernel

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential cpio curl flex git kmod libssl-dev libncurses5-dev libelf-dev python3 unzip zip

      - name: Clone Proton Clang
        run: |
          git clone --depth=1 https://github.com/kdrag0n/proton-clang.git clang

      - name: Build kernel
        run: |
          export PATH="$PWD/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=arm64
          make O=out ARCH=arm64 custom_defconfig
          cp arch/arm64/configs/custom_defconfig out/.config
          make O=out ARCH=arm64 CC=clang olddefconfig
          make -j$(nproc) O=out ARCH=arm64 CC=clang LD=ld.lld

      - name: Clone AnyKernel3
        run: |
          git clone https://github.com/Kairellll/AnyKernel3.git
          cp out/arch/arm64/boot/Image* AnyKernel3/
          if [ -f out/arch/arm64/boot/dtbo.img ]; then cp out/arch/arm64/boot/dtbo.img AnyKernel3/; fi

      - name: Zip kernel
        run: |
          cd AnyKernel3
          zip -r9 ../kernel.zip *

      - name: Upload ZIP
        uses: actions/upload-artifact@v3
        with:
          name: kernel-flashable
          path: kernel.zip
